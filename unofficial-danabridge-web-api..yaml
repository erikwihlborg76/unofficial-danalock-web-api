openapi: 3.0.0
info:
  title: unofficial-danabridge-web-api
  version: '1.0'
  description: ''
servers:
  - url: 'https://bridge.danalockservices.com'
paths:
  /bridge/v1/execute:
    post:
      summary: ''
      operationId: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobId'
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/LockState'
                - $ref: '#/components/schemas/LockOperate'
      description: |-
        Support three different commands:
        1. "LockState" to get current state/status of lock
        2. "LockOperate" passing "lock" as argument will lock the lock
        3. "LockOperate" passing "unlock" as argument will unlock the lock
  /bridge/v1/poll:
    post:
      summary: ''
      operationId: post-bridge-v1-poll
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/LockStateResponse'
                  - $ref: '#/components/schemas/LockOperateResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobId'
      description: 'To poll for response of the previously executed /bridge/v1/execute command. Note that you may need to way about 8 seconds for the job to complete. The body of the response must be matched to the command send in /bridge/v1/execute - i.e. if you first execute /bridge/v1/execute adding the LockState payload, then the response body for this operation will be LockStateResponse'
components:
  schemas:
    LockState:
      title: ''
      type: object
      description: Command for representing lock state
      properties:
        device:
          type: string
          example: '22:22:1c:a9:11:12'
        operation:
          type: string
          example: afi.lock.get-state
          enum:
            - afi.lock.get-state
    JobId:
      title: JobId
      type: object
      properties:
        id:
          type: string
          example: 49dbb678-79d9-4a8e-aebf-5d258a83eb5b
      description: Remote operation job id
    LockStateResponse:
      title: Command-response
      type: object
      properties:
        id:
          type: string
          example: b4e06993-f29a-4097-8c5d-531d4c411834
        status:
          type: string
          example: Succeeded
        result:
          type: object
          properties:
            state:
              type: string
              example: Locked
            lock_status:
              type: string
              example: Idle
            is_blocked:
              type: boolean
            afi_status:
              type: integer
              example: 0
            afi_status_text:
              type: string
              example: Ok
            dmi_status:
              type: number
              example: 0
            dmi_status_text:
              type: string
              example: ok
    LockOperate:
      title: LockOperateLock
      type: object
      properties:
        device:
          type: string
          example: '22:22:1c:a9:11:12'
        operation:
          type: string
          example: afi.lock.operate
          enum:
            - afi.lock.operate
        arguments:
          type: array
          items:
            type: string
            enum:
              - lock
              - unlock
    LockOperateResponse:
      title: LockOperateLockResponse
      type: object
      properties:
        id:
          type: string
          example: b4e06993-f29a-4097-8c5d-531d4c411834
        status:
          type: string
          example: Succeeded
        result:
          type: object
          properties:
            afi_status:
              type: integer
              example: 0
            afi_status_text:
              type: string
              example: Ok
            dmi_status:
              type: integer
              example: 0
            dmi_status_text:
              type: string
              example: ok
  securitySchemes:
    oauth2-scheme:
      type: oauth2
      flows:
        password:
          refreshUrl: 'https://api.danalock.com/oauth2/token'
          scopes: {}
          tokenUrl: 'https://api.danalock.com/oauth2/token'
      description: |-
        username: < email your danalock web account > password: <pw your danalock web account >
        client_id: danalock-web
        client_secret: should be empty
        scope: should be empty
